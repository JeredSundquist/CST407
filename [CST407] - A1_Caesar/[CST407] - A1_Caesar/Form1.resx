<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAIAAAADAAAABQAAAAoRABEPDQANEwAA
        ABYAAAAZAAAAGwAAABoAAAAYAAAAFAAAAA8AAAAMAAAACAAAAAQAAAADAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAFAAAACBISEg4NDQ0UAAAAGwAA
        ACQGAAYrAAAALwAAADIAAAA0AAAAMwAAADAAAAArAAAAJgAAAB4AAAAWAAAAEAAAAAsAAAAGAAAABAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABQAAAAoPDw8RCQkJGwcH
        ByUFBQUxBAQEPQQEBEcAAANNAAAAUgAAAFMAAABSAAADTgAABEgAAAQ/AAAFMwAAACgAAAAdAAAAFAAA
        AA0AAAAHAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAIAAAAEAoK
        ChoNBg0oCQkJOAcHB0gGCAZbBQUFawICBHQCAgJ3AgICdwICAnYEAgRyBQUFagYGCFwHBwdMCQQEPAYG
        AC0AAAAeAAAAFAAAAAwAAAAFAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAA
        AAoMDAwVCAgIIgoKCjMHBwdKCAgIZQoKCoJcXFyyjo6O0Jycm9m0tLTjq6ur3qCgoNONjY3CTk5OlwUF
        BWkGBgNQBAQEOgAAACgAAAAaAAAAEAAAAAcAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAGAAAADAsLCxcNDQ0nBAQEOzg4OGWwsLDE19fX893d3fvd3d783d3d/d3d3f3d3d393d3d+97e
        3vrg4OD41dXV6aOjo6YcICBIBgYGLQAAABwAAAARAAAACQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAYAAAALDAwMFhsbGybAwMCV5eXl6+bm5vTh4eH43d3d/dzc3P/c3Nz/3Nzc/9zc
        3P/c3Nz/3d7e/eDg4Pnj4+P26Ojo8uHh4d6urq5rCQkJGwAAABAAAAAIAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAh1dXUY4uLisevr6+7q6urv6enp8efn5/Pl5eX14+Pj9uXl
        5fXl5eX15eXl9ebm5vTm5ub05+fn8+fn5/Lp6enx6urq7+vr6+7d3d2HAAAACgAAAAQAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoqKiC+3t7b3u7u7s7u7u7O3t7e3t7e3t7e3t7e7u
        7uzv7+/r7+/v6+/v7+vv7+/r7+/v6+/v7+vu7u7s7u7u7e3t7e3t7e3t7u7u7O7u7uzr6+uMAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADv7++g8PDw6/Dw8Ovw8PDr8PDw6/Dw
        8Ovw8PDr8PDw6/Dw8Oumpqjy8PDw6+rq6uve3t7tubm58fDw8Ovw8PDr8PDw6/Dw8Ovw8PDr8PDw6/Dw
        8Ovw8PBmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7+/vYfDw8Ovw8PDr8PDw6/Dw
        8Ovw8PDr8PDw6/Dw8Ovw8PDr7u7u61VVVfxKSkv+SkpL/1FRUv6Li4z38PDw6/Dw8Ovw8PDr8PDw6/Dw
        8Ovw8PDr8PDw6/Dw8Ojs7OwpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOjo6Avw8PDS8fHx6/Hx
        8evx8fHr8fHx6/Hx8evx8fHr8fHx6/Hx8et/f3/3RERG/1BQUf9WVlf/V1dZ/1dXWP/AwMHx8fHx6/Hx
        8evx8fHr8fHx6/Hx8evx8fHr8fHx6/Dw8KYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHxb/Ly
        8uvy8vLr8vLy6/Ly8uvy8vLr8vLy6/Ly8uvy8vLr8vLy60FBQv9PT1H/fn6A+qmpqvVtbW/9X19h/4KC
        g/ny8vLr8vLy6/Ly8uvy8vLr8vLy6/Ly8uvy8vLr8vLy6+/v7y8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADy8vLC8vLy6/Ly8uvy8vLr8vLy6/Ly8uvy8vLr8vLy6/Ly8uvIyMjvTExO/1paXP+rq6z18vLy64qK
        jfppaWv/b29w/eTk5O3y8vLr8vLy6/Ly8uvy8vLr8vLy6/Ly8uvy8vLr8vLyigAAAAAAAAAAAAAAAAAA
        AAAAAAAA7e3tHPLy8uvy8vLr8vLy6/Ly8uvy8vLr8vLy6/Ly8uvMzMzvOzs8/kdHSP9ZWVr+ZmZo/oKC
        hPu2trf0dnZ4/nZ2ef5paWv/X19h/25ub/vu7u7r8vLy6/Ly8uvy8vLr8vLy6/Ly8uvz8/PPAAAAAAAA
        AAAAAAAAAAAAAAAAAADx8fFI8/Pz6/Pz8+vz8/Pr8/Pz6/Pz8+vz8/Pr8/Pz61ZWVvo8PD3/np6e9fLy
        8uvz8/PrlJSV+nl5e/+6urv08/Pz6+fn5+2CgoT7WVlb/56envXz8/Pr8/Pz6/Pz8+vz8/Pr8/Pz6/Pz
        8+vw8PARAAAAAAAAAAAAAAAAAAAAAPX19Wb09PTr9PT06/T09Ov09PTr9PT06/T09Ovp6ensNTU2/kFB
        Qv/Pz8/v0tLS76ioqvZ7e37/gYGD/4qKjf3Dw8Tz3Nzd77a2t/RhYWP/fHx9+fT09Ov09PTr9PT06/T0
        9Ov09PTr9PT06/Pz8ywAAAAAAAAAAAAAAAAAAAAA9vb2b/X19ev19fXr9fX16/X19ev19fXr9fX16/X1
        9eunp6jzRERF/1lZW/9qamz/eHh6/4KChP+IiIv/ioqN/4eHif9/f4L/dXV3/2ZmaP/i4uLt9fX16/X1
        9ev19fXr9fX16/X19ev19fXr9vb2NwAAAAAAAAAAAAAAAAAAAAD29vZs9vb26/b29uv29vbr9vb26/b2
        9uv29vbr9vb267CwsfJFRUb/W1td/21tb/98fH7/h4eJ/42NkP+QkJP/jIyP/4SEh/94eHv/aWlr/+rq
        6uz29vbr9vb26/b29uv29vbr9vb26/b29uv09PQvAAAAAAAAAAAAAAAAAAAAAPX19VD39/fr9/f36/f3
        9+v39/fr9/f36/f39+v39/frpaWm80JCRP9ZWVv/bW1v/3x8f/+IiIv/j4+S/5KSlf+OjpH/hYWI/3h4
        e/9oaGr/4uLj7ff39+v39/fr9/f36/f39+v39/fr9/f36/X19RkAAAAAAAAAAAAAAAAAAAAA+Pj4J/j4
        +Ov4+Pjr+Pj46/j4+Ov4+Pjr+Pj46/j4+OugoKDzPj4//1VVVv9oaGr/eHh7/4WFh/+NjY//kJCT/4uL
        jv+CgoT/dXV3/2NjZf/u7u7s+Pj46/j4+Ov4+Pjr+Pj46/j4+Ov4+PjaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+Pj42Pj4+Ov4+Pjr+Pj46/j4+Ov4+Pjr+Pj467S0tPE3Nzj/TExO/19fYf9vb3H/e3t+/4SE
        hv+Ghon/goKE/3l5e/9ra27/XFxe//j4+Ov4+Pjr+Pj46/j4+Ov4+Pjr+Pj46/j4+JgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD5+fmF+vr66/r6+uv6+vrr+vr66/r6+uv6+vrr7Ozs7DMzNP5BQUL/UlJU/2Fh
        Y/9tbW//dXV3/3h4ev9zc3b/amps/15eX/9qamv7+vr66/r6+uv6+vrr+vr66/r6+uv6+vrr+Pj4SwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPX19Rn7+/vj+/v76/v7++v7+/vr+/v76/v7++v7+/vre3t79zMz
        NP9DQ0T/UFBS/1tbXf9iYmT/ZGRm/2FhY/9ZWVv/TU1P/7i4ufL7+/vr+/v76/v7++v7+/vr+/v76/v7
        +7+qqqoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPv7+3z8/Pzr/Pz86/z8/Ov8/Pzr/Pz86/z8
        /Ovw8PDsUFBR+zIyM/8+Pj//R0dI/0xMTv9OTk//S0tM/0RERv+RkZL2/Pz86/z8/Ov8/Pzr/Pz86/z8
        /Ov8/Pzr+/v7RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7e3tDvv7+8L8/Pzr/Pz86/z8
        /Ov8/Pzr/Pz86/z8/Ov19fXrmpqa81VVVvs/P0H9NTU2/0xMTf1nZ2f6uLi58fz8/Ov8/Pzr/Pz86/z8
        /Ov8/Pzr/Pz86/z8/JMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9/f3Hv39
        /dj9/f3r/f396/39/ev9/f3r/f396/39/ev9/f3r/f396/39/ev9/f3r/f396/39/ev9/f3r/f396/39
        /ev9/f3r/f396/39/ev8/Py21dXVBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+fn5Kf7+/s/+/v7r/v7+6/7+/uv+/v7r/v7+6/7+/uv+/v7r/v7+6/7+/uv+/v7r/v7+6/7+
        /uv+/v7r/v7+6/7+/uv+/v7r/v7+sfDw8BEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8/PzFv7+/q7+/v7r/v7+6/7+/uv+/v7r/v7+6/7+/uv+/v7r/v7+6/7+
        /uv+/v7r/v7+6/7+/uv+/v7r/v7+6/39/YKqqqoDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///1b////H////6////+v////r////6///
        /+v////r////6////+v////r////6////6n///8pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8v////d///
        /7b///+/////6////+D///+8////q////2n///8cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAP/gAAA/4AAAH8AAAB/AAAAfwAAAH8AAAA/AAAAf4AAAP/AAAD/gA
        AAfwAAAH8AAAA/AAAAPgAAAD4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAD8AAAA/AAAAPwAAAD+AAAB/gA
        AA/8AAAP/gAAH/8AAD//wAD///AD//////8=
</value>
  </data>
</root>